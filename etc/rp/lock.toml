[[package]]
name = "absl-py"
version = "1.2.0"
description = "Abseil Python Common Libraries, see https://github.com/abseil/abseil-py."
optional = false
python-versions = ">=3.6"

[[package]]
name = "aiohttp"
version = "3.8.1"
description = "Async http client/server framework (asyncio)"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
attrs = ">=17.3.0"
charset-normalizer = ">=2.0,<3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = [ "aiodns",  "brotli",  "cchardet"]

[[package]]
name = "aiosignal"
version = "1.2.0"
description = "aiosignal: a list of registered asynchronous callbacks"
optional = false
python-versions = ">=3.6"
dependencies = {frozenlist = ">=1.1.0"}

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
optional = false
python-versions = ">=3.6"

[[package]]
name = "attrs"
version = "22.1.0"
description = "Classes Without Boilerplate"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = [ "coverage[toml] (>=5.0.2)",  "hypothesis",  "pympler",  "pytest (>=4.3.0)",  "mypy (>=0.900,!=0.940)",  "pytest-mypy-plugins",  "zope.interface",  "furo",  "sphinx",  "sphinx-notfound-page",  "pre-commit",  "cloudpickle"]
docs = [ "furo",  "sphinx",  "zope.interface",  "sphinx-notfound-page"]
tests = [ "coverage[toml] (>=5.0.2)",  "hypothesis",  "pympler",  "pytest (>=4.3.0)",  "mypy (>=0.900,!=0.940)",  "pytest-mypy-plugins",  "zope.interface",  "cloudpickle"]
tests_no_zope = [ "coverage[toml] (>=5.0.2)",  "hypothesis",  "pympler",  "pytest (>=4.3.0)",  "mypy (>=0.900,!=0.940)",  "pytest-mypy-plugins",  "cloudpickle"]

[[package]]
name = "cachetools"
version = "5.2.0"
description = "Extensible memoizing collections and decorators"
optional = false
python-versions = "~=3.7"

[[package]]
name = "certifi"
version = "2022.6.15"
description = "Python package for providing Mozilla's CA Bundle."
optional = false
python-versions = ">=3.6"

[[package]]
name = "charset-normalizer"
version = "2.1.0"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = [ "unicodedata2"]

[[package]]
name = "frozenlist"
version = "1.3.1"
description = "A list-like structure which implements collections.abc.MutableSequence"
optional = false
python-versions = ">=3.7"

[[package]]
name = "fsspec"
version = "2022.7.1"
description = "File-system specification"
optional = false
python-versions = ">=3.7"

[package.dependencies.aiohttp]
version = "*"
optional = true
markers = "extra == \"http\""

[package.dependencies.requests]
version = "*"
optional = true
markers = "extra == \"http\""

[package.extras]
abfs = [ "adlfs"]
adl = [ "adlfs"]
arrow = [ "pyarrow (>=1)"]
dask = [ "dask",  "distributed"]
dropbox = [ "dropboxdrivefs",  "requests",  "dropbox"]
entrypoints = [ "importlib-metadata"]
fuse = [ "fusepy"]
gcs = [ "gcsfs"]
git = [ "pygit2"]
github = [ "requests"]
gs = [ "gcsfs"]
gui = [ "panel"]
hdfs = [ "pyarrow (>=1)"]
http = [ "requests",  "aiohttp"]
libarchive = [ "libarchive-c"]
oci = [ "ocifs"]
s3 = [ "s3fs"]
sftp = [ "paramiko"]
smb = [ "smbprotocol"]
ssh = [ "paramiko"]
tqdm = [ "tqdm"]

[[package]]
name = "google-auth"
version = "2.10.0"
description = "Google Authentication Library"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[package.dependencies]
cachetools = ">=2.0.0,<6.0"
pyasn1-modules = ">=0.2.1"
rsa = {version = ">=3.1.4,<5", markers = "python_version >= \"3.6\""}
six = ">=1.9.0"

[package.extras]
reauth = [ "pyu2f (>=0.1.5)"]
pyopenssl = [ "pyopenssl (>=20.0.0)"]
enterprise_cert = [ "pyopenssl (==22.0.0)",  "cryptography (==36.0.2)"]
aiohttp = [ "aiohttp (>=3.6.2,<4.0.0dev)",  "requests (>=2.20.0,<3.0.0dev)"]

[[package]]
name = "google-auth-oauthlib"
version = "0.4.6"
description = "Google Authentication Library"
optional = false
python-versions = ">=3.6"
dependencies = {google-auth = ">=1.0.0", requests-oauthlib = ">=0.7.0"}

[package.extras]
tool = [ "click (>=6.0.0)"]

[[package]]
name = "grpcio"
version = "1.48.0"
description = "HTTP/2-based RPC framework"
optional = false
python-versions = ">=3.6"
dependencies = {six = ">=1.5.2"}

[package.extras]
protobuf = [ "grpcio-tools (>=1.48.0)"]

[[package]]
name = "idna"
version = "3.3"
description = "Internationalized Domain Names in Applications (IDNA)"
optional = false
python-versions = ">=3.5"

[[package]]
name = "importlib-metadata"
version = "4.12.0"
description = "Read metadata from Python packages"
optional = false
python-versions = ">=3.7"
dependencies = {zipp = ">=0.5"}

[package.extras]
docs = [ "sphinx",  "jaraco.packaging (>=9)",  "rst.linker (>=1.9)"]
perf = [ "ipython"]
testing = [ "pytest (>=6)",  "pytest-checkdocs (>=2.4)",  "pytest-flake8",  "pytest-cov",  "pytest-enabler (>=1.3)",  "packaging",  "pyfakefs",  "flufl.flake8",  "pytest-perf (>=0.9.2)",  "pytest-black (>=0.3.7)",  "pytest-mypy (>=0.9.1)",  "importlib-resources (>=1.3)"]

[[package]]
name = "markdown"
version = "3.4.1"
description = "Python implementation of Markdown."
optional = false
python-versions = ">=3.7"

[package.dependencies.importlib-metadata]
version = ">=4.4"
markers = "python_version < \"3.10\""

[package.extras]
testing = [ "pyyaml",  "coverage"]

[[package]]
name = "markupsafe"
version = "2.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
optional = false
python-versions = ">=3.7"

[[package]]
name = "multidict"
version = "6.0.2"
description = "multidict implementation"
optional = false
python-versions = ">=3.7"

[[package]]
name = "numpy"
version = "1.23.2"
description = "NumPy is the fundamental package for array computing with Python."
optional = false
python-versions = ">=3.8"

[[package]]
name = "oauthlib"
version = "3.2.0"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
optional = false
python-versions = ">=3.6"

[package.extras]
rsa = [ "cryptography (>=3.0.0)"]
signals = [ "blinker (>=1.4.0)"]
signedtoken = [ "cryptography (>=3.0.0)",  "pyjwt (>=2.0.0,<3)"]

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
optional = false
python-versions = ">=3.6"
dependencies = {pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"}

[[package]]
name = "protobuf"
version = "3.19.4"
description = "Protocol Buffers"
optional = false
python-versions = ">=3.5"

[[package]]
name = "pyasn1"
version = "0.4.8"
description = "ASN.1 types and codecs"
optional = false
python-versions = "*"

[[package]]
name = "pyasn1-modules"
version = "0.2.8"
description = "A collection of ASN.1-based protocols modules."
optional = false
python-versions = "*"
dependencies = {pyasn1 = ">=0.4.6,<0.5.0"}

[[package]]
name = "pydeprecate"
version = "0.3.2"
description = "Deprecation tooling"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = [ "railroad-diagrams",  "jinja2"]

[[package]]
name = "pytorch-lightning"
version = "1.7.1"
description = "PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers. Scale your models. Write less boilerplate."
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.17.2"
packaging = ">=17.0"
pyDeprecate = ">=0.3.1"
PyYAML = ">=5.4"
tensorboard = ">=2.9.1"
torch = ">=1.9"
torchmetrics = ">=0.7.0"
tqdm = ">=4.57.0"
typing-extensions = ">=4.0.0"

[package.dependencies.fsspec]
version = ">=2021.05.0,<2021.06.0 || >2021.06.0"
extras = [ "http"]

[package.extras]
all = [ "matplotlib (>3.1)",  "torchtext (>=0.10)",  "omegaconf (>=2.0.5)",  "hydra-core (>=1.0.5)",  "jsonargparse[signatures] (>=4.12.0)",  "gcsfs (>=2021.5.0)",  "rich (>=10.14.0,!=10.15.0.a)",  "neptune-client (>=0.10.0)",  "comet-ml (>=3.1.12)",  "mlflow (>=1.0.0)",  "test-tube (>=0.7.5)",  "wandb (>=0.10.22)",  "coverage (>=6.4)",  "codecov (>=2.1)",  "pytest (>=7.0)",  "pytest-cov",  "pytest-forked",  "pytest-rerunfailures (>=10.2)",  "pre-commit (>=1.0)",  "mypy (==0.971)",  "cloudpickle (>=1.3)",  "scikit-learn (>0.22.1)",  "onnxruntime",  "psutil",  "pandas (>1.0)",  "fastapi",  "uvicorn",  "torchvision (>=0.10)",  "gym[classic_control] (>=0.17.0)",  "ipython",  "fairscale (>=0.4.5)",  "deepspeed (>=0.6.0)",  "horovod (>=0.21.2,!=0.24.0)",  "hivemind (>=1.0.1)"]
deepspeed = [ "deepspeed (>=0.6.0)"]
dev = [ "matplotlib (>3.1)",  "torchtext (>=0.10)",  "omegaconf (>=2.0.5)",  "hydra-core (>=1.0.5)",  "jsonargparse[signatures] (>=4.12.0)",  "gcsfs (>=2021.5.0)",  "rich (>=10.14.0,!=10.15.0.a)",  "neptune-client (>=0.10.0)",  "comet-ml (>=3.1.12)",  "mlflow (>=1.0.0)",  "test-tube (>=0.7.5)",  "wandb (>=0.10.22)",  "coverage (>=6.4)",  "codecov (>=2.1)",  "pytest (>=7.0)",  "pytest-cov",  "pytest-forked",  "pytest-rerunfailures (>=10.2)",  "pre-commit (>=1.0)",  "mypy (==0.971)",  "cloudpickle (>=1.3)",  "scikit-learn (>0.22.1)",  "onnxruntime",  "psutil",  "pandas (>1.0)",  "fastapi",  "uvicorn"]
examples = [ "torchvision (>=0.10)",  "gym[classic_control] (>=0.17.0)",  "ipython"]
extra = [ "matplotlib (>3.1)",  "torchtext (>=0.10)",  "omegaconf (>=2.0.5)",  "hydra-core (>=1.0.5)",  "jsonargparse[signatures] (>=4.12.0)",  "gcsfs (>=2021.5.0)",  "rich (>=10.14.0,!=10.15.0.a)"]
fairscale = [ "fairscale (>=0.4.5)"]
hivemind = [ "hivemind (>=1.0.1)"]
horovod = [ "horovod (>=0.21.2,!=0.24.0)"]
loggers = [ "neptune-client (>=0.10.0)",  "comet-ml (>=3.1.12)",  "mlflow (>=1.0.0)",  "test-tube (>=0.7.5)",  "wandb (>=0.10.22)"]
strategies = [ "fairscale (>=0.4.5)",  "deepspeed (>=0.6.0)",  "horovod (>=0.21.2,!=0.24.0)",  "hivemind (>=1.0.1)"]
test = [ "coverage (>=6.4)",  "codecov (>=2.1)",  "pytest (>=7.0)",  "pytest-cov",  "pytest-forked",  "pytest-rerunfailures (>=10.2)",  "pre-commit (>=1.0)",  "mypy (==0.971)",  "cloudpickle (>=1.3)",  "scikit-learn (>0.22.1)",  "onnxruntime",  "psutil",  "pandas (>1.0)",  "fastapi",  "uvicorn"]

[[package]]
name = "pyyaml"
version = "6.0"
description = "YAML parser and emitter for Python"
optional = false
python-versions = ">=3.6"

[[package]]
name = "requests"
version = "2.28.1"
description = "Python HTTP for Humans."
optional = false
python-versions = ">=3.7, <4"
dependencies = {certifi = ">=2017.4.17", charset-normalizer = ">=2,<3", idna = ">=2.5,<4", urllib3 = ">=1.21.1,<1.27"}

[package.extras]
socks = [ "PySocks (>=1.5.6,!=1.5.7)"]
use_chardet_on_py3 = [ "chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-oauthlib"
version = "1.3.1"
description = "OAuthlib authentication support for Requests."
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
dependencies = {oauthlib = ">=3.0.0", requests = ">=2.0.0"}

[package.extras]
rsa = [ "oauthlib[signedtoken] (>=3.0.0)"]

[[package]]
name = "rsa"
version = "4.9"
description = "Pure-Python RSA implementation"
optional = false
python-versions = ">=3.6,<4"
dependencies = {pyasn1 = ">=0.1.3"}

[[package]]
name = "setuptools"
version = "65.0.1"
description = "Easily download, build, install, upgrade, and uninstall Python packages"
optional = false
python-versions = ">=3.7"

[package.extras]
testing = [ "pytest-mypy (>=0.9.1)",  "pytest-cov",  "pytest-black (>=0.3.7)",  "tomli-w (>=1.0.0)",  "ini2toml[lite] (>=0.9)",  "pip-run (>=8.8)",  "filelock (>=3.4.0)",  "build",  "jaraco.path (>=3.2.0)",  "pytest-xdist",  "jaraco.envs (>=2.2)",  "pip (>=19.1)",  "wheel",  "virtualenv (>=13.0.0)",  "flake8-2020",  "mock",  "pytest-perf",  "pytest-enabler (>=1.3)",  "flake8 (<5)",  "pytest-flake8",  "pytest-checkdocs (>=2.4)",  "pytest (>=6)"]
testing-integration = [ "filelock (>=3.4.0)",  "build",  "jaraco.envs (>=2.2)",  "jaraco.path (>=3.2.0)",  "wheel",  "tomli",  "virtualenv (>=13.0.0)",  "pytest-enabler",  "pytest-xdist",  "pytest"]
docs = [ "furo",  "sphinxcontrib-towncrier",  "sphinx-reredirects",  "sphinx-inline-tabs",  "sphinx-favicon",  "pygments-github-lexers (==0.0.5)",  "sphinx-hoverxref (<2)",  "sphinx-notfound-page (==0.8.3)",  "jaraco.tidelift (>=1.4)",  "rst.linker (>=1.9)",  "jaraco.packaging (>=9)",  "sphinx"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tensorboard"
version = "2.10.0"
description = "TensorBoard lets you watch Tensors Flow"
optional = false
python-versions = ">=3.6"

[package.dependencies]
absl-py = ">=0.4"
google-auth = ">=1.6.3,<3"
google-auth-oauthlib = ">=0.4.1,<0.5"
grpcio = ">=1.24.3"
markdown = ">=2.6.8"
numpy = ">=1.12.0"
protobuf = ">=3.9.2,<3.20"
requests = ">=2.21.0,<3"
setuptools = ">=41.0.0"
tensorboard-data-server = ">=0.6.0,<0.7.0"
tensorboard-plugin-wit = ">=1.6.0"
werkzeug = ">=1.0.1"
wheel = ">=0.26"

[[package]]
name = "tensorboard-data-server"
version = "0.6.1"
description = "Fast data loading for TensorBoard"
optional = false
python-versions = ">=3.6"

[[package]]
name = "tensorboard-plugin-wit"
version = "1.8.1"
description = "What-If Tool TensorBoard plugin."
optional = false
python-versions = "*"

[[package]]
name = "torch"
version = "1.12.0+cu113"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
optional = false
python-versions = ">=3.7.0"
dependencies = {typing-extensions = "*"}
source = {type = "legacy", url = "https://download.pytorch.org/whl/cu113", reference = "pytorch"}

[[package]]
name = "torchmetrics"
version = "0.9.3"
description = "PyTorch native Metrics"
optional = false
python-versions = ">=3.7"
dependencies = {numpy = ">=1.17.2", packaging = "*", torch = ">=1.3.1"}

[package.extras]
text = [ "tqdm (>=4.41.0)",  "regex (>=2021.9.24)",  "nltk (>=3.6)"]
test = [ "mypy (>=0.790)",  "phmdoctest (>=1.1.1)",  "fast-bss-eval (>=0.1.0)",  "sacrebleu (>=2.0.0)",  "twine (>=3.2)",  "jiwer (>=2.3.0)",  "rouge-score (==0.0.4)",  "requests",  "pytest-doctestplus (>=0.9.0)",  "huggingface-hub (<0.7)",  "coverage (>5.2)",  "psutil",  "pytorch-msssim",  "bert-score (==0.3.10)",  "fire",  "pre-commit (>=1.0)",  "transformers (>=4.0)",  "pypesq",  "pytest (>=6.0.0,<7.0.0)",  "scikit-image (>0.17.1)",  "pycocotools",  "pytest-timeout",  "pytest-cov (>2.10)",  "mir-eval (>=0.6)",  "cloudpickle (>=1.3)",  "scikit-learn (>1.0,<1.1.1)",  "torch-complex",  "check-manifest",  "codecov (>=2.1)"]
integrate = [ "pytorch-lightning (>=1.5)"]
image = [ "torchvision",  "scipy",  "torch-fidelity",  "lpips"]
docs = [ "myst-parser",  "sphinx-paramlinks (>=0.5.1)",  "sphinx-togglebutton (>=0.2)",  "nbsphinx (>=0.8)",  "pandoc (>=1.0)",  "docutils (>=0.16)",  "sphinx-copybutton (>=0.3)",  "sphinx-autodoc-typehints (>=1.0)",  "sphinxcontrib-mockautodoc",  "sphinxcontrib-fulltoc (>=1.0)",  "sphinx (>=4.0,<5.0)"]
detection = [ "torchvision (>=0.8)",  "pycocotools"]
audio = [ "pystoi"]
all = [ "tqdm (>=4.41.0)",  "regex (>=2021.9.24)",  "nltk (>=3.6)",  "mypy (>=0.790)",  "phmdoctest (>=1.1.1)",  "fast-bss-eval (>=0.1.0)",  "sacrebleu (>=2.0.0)",  "twine (>=3.2)",  "jiwer (>=2.3.0)",  "rouge-score (==0.0.4)",  "requests",  "pytest-doctestplus (>=0.9.0)",  "huggingface-hub (<0.7)",  "coverage (>5.2)",  "psutil",  "pytorch-msssim",  "bert-score (==0.3.10)",  "fire",  "pre-commit (>=1.0)",  "transformers (>=4.0)",  "pypesq",  "pytest (>=6.0.0,<7.0.0)",  "scikit-image (>0.17.1)",  "pytest-timeout",  "pytest-cov (>2.10)",  "mir-eval (>=0.6)",  "cloudpickle (>=1.3)",  "scikit-learn (>1.0,<1.1.1)",  "torch-complex",  "check-manifest",  "codecov (>=2.1)",  "pytorch-lightning (>=1.5)",  "torchvision",  "scipy",  "torch-fidelity",  "lpips",  "myst-parser",  "sphinx-paramlinks (>=0.5.1)",  "sphinx-togglebutton (>=0.2)",  "nbsphinx (>=0.8)",  "pandoc (>=1.0)",  "docutils (>=0.16)",  "sphinx-copybutton (>=0.3)",  "sphinx-autodoc-typehints (>=1.0)",  "sphinxcontrib-mockautodoc",  "sphinxcontrib-fulltoc (>=1.0)",  "sphinx (>=4.0,<5.0)",  "torchvision (>=0.8)",  "pycocotools",  "pystoi"]

[[package]]
name = "tqdm"
version = "4.64.0"
description = "Fast, Extensible Progress Meter"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.extras]
dev = [ "py-make (>=0.1.0)",  "twine",  "wheel"]
notebook = [ "ipywidgets (>=6)"]
slack = [ "slack-sdk"]
telegram = [ "requests"]

[[package]]
name = "typing-extensions"
version = "4.3.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.11"
description = "HTTP library with thread-safe connection pooling, file post, and more."
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"

[package.extras]
brotli = [ "brotlicffi (>=0.8.0)",  "brotli (>=1.0.9)",  "brotlipy (>=0.6.0)"]
secure = [ "pyOpenSSL (>=0.14)",  "cryptography (>=1.3.4)",  "idna (>=2.0.0)",  "certifi",  "ipaddress"]
socks = [ "PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "werkzeug"
version = "2.2.2"
description = "The comprehensive WSGI web application library."
optional = false
python-versions = ">=3.7"
dependencies = {MarkupSafe = ">=2.1.1"}

[package.extras]
watchdog = [ "watchdog"]

[[package]]
name = "wheel"
version = "0.37.1"
description = "A built-package format for Python"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.extras]
test = [ "pytest-cov",  "pytest (>=3.0.0)"]

[[package]]
name = "yarl"
version = "1.8.1"
description = "Yet another URL library"
optional = false
python-versions = ">=3.7"
dependencies = {idna = ">=2.0", multidict = ">=4.0"}

[[package]]
name = "zipp"
version = "3.8.1"
description = "Backport of pathlib-compatible object wrapper for zip files"
optional = false
python-versions = ">=3.7"

[package.extras]
testing = [ "pytest-mypy (>=0.9.1)",  "pytest-black (>=0.3.7)",  "func-timeout",  "jaraco.itertools",  "pytest-enabler (>=1.3)",  "pytest-cov",  "pytest-flake8",  "pytest-checkdocs (>=2.4)",  "pytest (>=6)"]
docs = [ "jaraco.tidelift (>=1.4)",  "rst.linker (>=1.9)",  "jaraco.packaging (>=9)",  "sphinx"]

[metadata]
lock-version = "1.1"
python-versions = "^3.9"
content-hash = "0b90a7820f31baca4bf5bf38eb2f69797644807b385b58f400c969f5d4e84ea9"

[metadata.files]
absl-py = []
aiohttp = []
aiosignal = []
async-timeout = []
attrs = []
cachetools = []
certifi = []
charset-normalizer = []
frozenlist = []
fsspec = []
google-auth = []
google-auth-oauthlib = []
grpcio = []
idna = []
importlib-metadata = []
markdown = []
markupsafe = []
multidict = []
numpy = []
oauthlib = []
packaging = []
protobuf = []
pyasn1 = []
pyasn1-modules = []
pydeprecate = []
pyparsing = []
pytorch-lightning = []
pyyaml = []
requests = []
requests-oauthlib = []
rsa = []
setuptools = []
six = []
tensorboard = []
tensorboard-data-server = []
tensorboard-plugin-wit = []
torchmetrics = []
tqdm = []
typing-extensions = []
urllib3 = []
werkzeug = []
wheel = []
yarl = []
zipp = []

[[metadata.files.torch]]
file = "torch-1.12.0+cu113-cp310-cp310-linux_x86_64.whl"

[[metadata.files.torch]]
file = "torch-1.12.0+cu113-cp310-cp310-win_amd64.whl"

[[metadata.files.torch]]
file = "torch-1.12.0+cu113-cp37-cp37m-linux_x86_64.whl"

[[metadata.files.torch]]
file = "torch-1.12.0+cu113-cp37-cp37m-win_amd64.whl"

[[metadata.files.torch]]
file = "torch-1.12.0+cu113-cp38-cp38-linux_x86_64.whl"

[[metadata.files.torch]]
file = "torch-1.12.0+cu113-cp38-cp38-win_amd64.whl"

[[metadata.files.torch]]
file = "torch-1.12.0+cu113-cp39-cp39-linux_x86_64.whl"

[[metadata.files.torch]]
file = "torch-1.12.0+cu113-cp39-cp39-win_amd64.whl"